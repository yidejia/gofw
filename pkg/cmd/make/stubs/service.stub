// Package {{CustomPackageName}} {{ModuleComment}}模块包
package {{CustomPackageName}}

import (
	gfErrors "github.com/yidejia/gofw/pkg/errors"
    "{{AppName}}/app/models/{{CustomPackageName}}"
    {{CustomPackageName}}Repos "{{AppName}}/app/repositories/{{CustomPackageName}}"
    svcs "{{AppName}}/app/services"
)

// {{StructName}}Service {{Comment}}服务
// @author {{Author}} {{AuthorEmail}}
// @created {{CreatedDataTime}}
// @copyright © 2010-{{CopyrightToYear}} 广州伊的家网络科技有限公司
type {{StructName}}Service struct {
	svcs.Service
    repo *{{CustomPackageName}}Repos.{{StructName}}Repository
}

// New{{StructName}}Service 生成{{Comment}}服务实例
func New{{StructName}}Service() *{{StructName}}Service {
	return &{{StructName}}Service{
    	repo: {{CustomPackageName}}Repos.New{{StructName}}Repository(),
    }
}

// Create 创建{{Comment}}
func (svc *{{StructName}}Service) Create({{VariableName}} *{{CustomPackageName}}.{{StructName}}) (err gfErrors.ResponsiveError) {
    err = svc.repo.Create({{VariableName}})
    return
}

// Save 保存{{Comment}}
func (svc *{{StructName}}Service) Save({{VariableName}} *{{CustomPackageName}}.{{StructName}}) (rowsAffected int64, err gfErrors.ResponsiveError) {
    rowsAffected, err = svc.repo.Save({{VariableName}})
    return
}

// Delete 删除{{Comment}}
func (svc *{{StructName}}Service) Delete({{VariableName}} *{{CustomPackageName}}.{{StructName}}) (rowsAffected int64, err gfErrors.ResponsiveError) {
    rowsAffected, err = svc.repo.Delete({{VariableName}})
    return
}

// Get 通过 ID 获取{{Comment}}
func (svc *{{StructName}}Service) Get(id string) ({{VariableName}} {{CustomPackageName}}.{{StructName}}, err gfErrors.ResponsiveError) {
    {{VariableName}}, err = svc.repo.Get(id)
    return
}

// GetBy 通过指定字段获取{{Comment}}
func (svc *{{StructName}}Service) GetBy(field, value string) ({{VariableName}} {{CustomPackageName}}.{{StructName}}, err gfErrors.ResponsiveError) {
    {{VariableName}}, err = svc.repo.GetBy(field, value)
    return
}

// All 获取所有{{Comment}}
func (svc *{{StructName}}Service) All() ({{VariableNamePlural}} []{{CustomPackageName}}.{{StructName}}, err gfErrors.ResponsiveError) {
    {{VariableNamePlural}}, err = svc.repo.All()
    return
}

// IsExist 根据字段判断{{Comment}}是否存在
func (svc *{{StructName}}Service) IsExist(field, value string) (bool, gfErrors.ResponsiveError) {
    return svc.repo.IsExist(field, value)
}
