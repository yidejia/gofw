// Package {{CustomPackageName}} {{ModuleComment}}模块包
package {{CustomPackageName}}

import (
    "github.com/gin-gonic/gin"
    gfReqs "github.com/yidejia/gofw/pkg/requests"
    "github.com/yidejia/gofw/pkg/response"
    {{Version}} "{{AppName}}/app/http/controllers/api/{{Version}}"
    "{{AppName}}/app/models/{{CustomPackageName}}"
    {{CustomPackageName}}Reqs "{{AppName}}/app/requests/{{CustomPackageName}}"
    {{CustomPackageName}}Svcs "{{AppName}}/app/services/{{CustomPackageName}}"
)

// {{StructNamePlural}}Controller {{Comment}}控制器
// @author {{Author}} {{AuthorEmail}}
// @created {{CreatedDataTime}}
// @copyright © 2010-{{CopyrightToYear}} 广州伊的家网络科技有限公司
type {{StructNamePlural}}Controller struct {
    {{Version}}.APIController
}

// Store 创建{{Comment}}
func (ctrl *{{StructNamePlural}}Controller) Store(c *gin.Context) {

	req := &{{CustomPackageName}}Reqs.Create{{StructName}}Request{}
	if ok := req.BindAndValidate(c, req); !ok {
		return
	}

	if _{{VariableName}}, err := {{CustomPackageName}}Svcs.New{{StructName}}Service().Create(req.ToModel().(*{{CustomPackageName}}.{{StructName}})); err != nil {
		response.AbortWithError(c, err)
	} else {
		response.Item(c, _user)
	}
}

// Index {{Comment}}列表
func (ctrl *{{StructNamePlural}}Controller) Index(c *gin.Context) {

	req := &gfReqs.PaginationRequest{}
	if ok := req.Bind(c, req); !ok {
		return
	}

	if {{VariableNamePlural}}, paging, err := {{CustomPackageName}}Svcs.New{{StructName}}Service().Paginate(req.Page, req.PerPage); err != nil {
		response.AbortWithError(c, err)
	} else {
		response.Paginate(c, {{VariableNamePlural}}, paging)
	}
}

// Show {{Comment}}详情
func (ctrl *{{StructNamePlural}}Controller) Show(c *gin.Context) {
	if _{{VariableName}}, err := {{CustomPackageName}}Svcs.New{{StructName}}Service().Get(c.Param("id")); err != nil {
		response.AbortWithError(c, err)
	} else {
		response.Item(c, _{{VariableName}})
	}
}