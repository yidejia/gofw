// Package {{CustomPackageName}} {{ModuleComment}}模块包
package {{CustomPackageName}}

import (
    gfModels "github.com/yidejia/gofw/pkg/models"
    // "gorm.io/gorm"
    "{{AppName}}/app/models"
)

// {{StructName}} {{Comment}}模型
// @author {{Author}} {{AuthorEmail}}
// @created {{CreatedDataTime}}
// @copyright © 2010-{{CopyrightToYear}} 广州伊的家网络科技有限公司
type {{StructName}} struct {
    models.Model // 嵌入应用模型基类

    // TODO 在这里添加模型字段

    gfModels.CommonTimestampsField // 时间戳，不需要的可以删除这个嵌入
}

// ModelName 模型名称
func (m {{StructName}}) ModelName() string {
	return "{{Comment}}"
}

// Connection 获取模型对应的数据库连接
// 不是使用默认数据库的模型需要定义使用哪个数据库连接
// 使用默认数据库连接可以删除此方法
//func (m {{StructName}}) Connection() string {
//    return "db_connection_name"
//}

// TableName 返回表名
//func (m {{StructName}}) TableName() string {
//    return "table_name"
//}

// TODO 注册模型钩子方法
// func ({{VariableName}} *{{StructName}}) BeforeSave(tx *gorm.DB) (err error) {}
// func ({{VariableName}} *{{StructName}}) BeforeCreate(tx *gorm.DB) (err error) {}
// func ({{VariableName}} *{{StructName}}) AfterCreate(tx *gorm.DB) (err error) {}
// func ({{VariableName}} *{{StructName}}) BeforeUpdate(tx *gorm.DB) (err error) {}
// func ({{VariableName}} *{{StructName}}) AfterUpdate(tx *gorm.DB) (err error) {}
// func ({{VariableName}} *{{StructName}}) AfterSave(tx *gorm.DB) (err error) {}
// func ({{VariableName}} *{{StructName}}) BeforeDelete(tx *gorm.DB) (err error) {}
// func ({{VariableName}} *{{StructName}}) AfterDelete(tx *gorm.DB) (err error) {}
// func ({{VariableName}} *{{StructName}}) AfterFind(tx *gorm.DB) (err error) {}