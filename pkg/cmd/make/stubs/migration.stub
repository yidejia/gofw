package migrations

// {{Instruction}}
// @author {{Author}} {{AuthorEmail}}
// @created {{CreatedDataTime}}
// @copyright © {{CopyrightFromYear}}-{{CopyrightToYear}} {{AuthorCompany}}

import (
	"database/sql"
	"github.com/yidejia/gofw/pkg/migrate"
	gfModels "github.com/yidejia/gofw/pkg/models"
	"gorm.io/gorm"
	"{{AppName}}/app/models"
)

func init() {

	type {{StructName}} struct {
		models.Model // 嵌入应用模型基类

		Name      string `gorm:"type:varchar(20);not null;index:name;comment:名称"`
		Password  string `gorm:"type:varchar(255);default:'';comment:密码"`
		Status    uint8  `gorm:"type:tinyint unsigned;default:0;comment:状态"`
		Phone     string `gorm:"type:varchar(20);not null;index:phone;comment:手机"`

		gfModels.CommonTimestampsField // 时间戳，不需要的可以删除这个嵌入
	}

	// TODO 执行迁移
	up := func(migrator gorm.Migrator, DB *sql.DB) error {
		var err error
		if err = migrator.AutoMigrate(&{{StructName}}{}); err != nil {
			return err
		}
		// 添加表名注释
		{{CommentOutTableName}}_, err = DB.Exec("alter table `{{TableName}}` comment'{{TableNameComment}}'")
		return err
	}

	// TODO 回滚迁移
	down := func(migrator gorm.Migrator, DB *sql.DB) error {
		return migrator.DropTable(&{{StructName}}{})
	}

    // 注册迁移文件
    // 不是连接默认数据库执行迁移时，可以在 down 参数后面传入数据库连接名，即可实现在其它数据库上执行迁移
	migrate.Add("{{FileName}}", up, down)
}